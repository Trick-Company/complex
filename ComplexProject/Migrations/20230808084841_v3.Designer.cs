// <auto-generated />
using ComplexProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComplexProject.Migrations
{
    [DbContext(typeof(ComplexContext))]
    [Migration("20230808084841_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompanyGeneralServices", b =>
                {
                    b.Property<int>("Li_CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Li_GeneralServiceId")
                        .HasColumnType("int");

                    b.HasKey("Li_CompanyId", "Li_GeneralServiceId");

                    b.HasIndex("Li_GeneralServiceId");

                    b.ToTable("CompanyGeneralServices");
                });

            modelBuilder.Entity("ComplexProject.Data.CoffeShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoffeShops");
                });

            modelBuilder.Entity("ComplexProject.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Field_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Field_Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ComplexProject.Data.ComplainSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Company_Id");

                    b.ToTable("ComplainSuggestions");
                });

            modelBuilder.Entity("ComplexProject.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoffeShop_Id")
                        .HasColumnType("int");

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoffeShop_Id");

                    b.HasIndex("Company_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ComplexProject.Data.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("ComplexProject.Data.GeneralServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralServices");
                });

            modelBuilder.Entity("CompanyGeneralServices", b =>
                {
                    b.HasOne("ComplexProject.Data.Company", null)
                        .WithMany()
                        .HasForeignKey("Li_CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplexProject.Data.GeneralServices", null)
                        .WithMany()
                        .HasForeignKey("Li_GeneralServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComplexProject.Data.Company", b =>
                {
                    b.HasOne("ComplexProject.Data.Field", "field")
                        .WithMany("Li_company")
                        .HasForeignKey("Field_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("field");
                });

            modelBuilder.Entity("ComplexProject.Data.ComplainSuggestion", b =>
                {
                    b.HasOne("ComplexProject.Data.Company", "company")
                        .WithMany("Li_ComplainSuggestion")
                        .HasForeignKey("Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("ComplexProject.Data.Employee", b =>
                {
                    b.HasOne("ComplexProject.Data.CoffeShop", "coffeShop")
                        .WithMany("Li_Employee")
                        .HasForeignKey("CoffeShop_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplexProject.Data.Company", "company")
                        .WithMany("Li_Employee")
                        .HasForeignKey("Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coffeShop");

                    b.Navigation("company");
                });

            modelBuilder.Entity("ComplexProject.Data.CoffeShop", b =>
                {
                    b.Navigation("Li_Employee");
                });

            modelBuilder.Entity("ComplexProject.Data.Company", b =>
                {
                    b.Navigation("Li_ComplainSuggestion");

                    b.Navigation("Li_Employee");
                });

            modelBuilder.Entity("ComplexProject.Data.Field", b =>
                {
                    b.Navigation("Li_company");
                });
#pragma warning restore 612, 618
        }
    }
}
